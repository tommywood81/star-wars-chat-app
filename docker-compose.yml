version: "3.9"

services:
  # Speech-to-Text Service
  stt:
    build:
      context: .
      dockerfile: Dockerfile.stt
    container_name: star_wars_stt_service
    ports:
      - "5001:5001"
    volumes:
      - ./models:/app/models
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - WHISPER_MODEL=base
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Text-to-Speech Service
  tts:
    build:
      context: .
      dockerfile: Dockerfile.tts
    container_name: star_wars_tts_service
    ports:
      - "5002:5002"
    volumes:
      - ./models:/app/models
      - ./static/audio:/app/static/audio
    environment:
      - PYTHONPATH=/app
      - TTS_CACHE_DIR=/app/models/tts
      - DEFAULT_VOICE=ljspeech
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # LLM Service
  llm:
    build:
      context: .
      dockerfile: Dockerfile.llm
    container_name: star_wars_llm_service
    ports:
      - "5003:5003"
    volumes:
      - ./models:/app/models
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - MODEL_PATH=/app/models/phi-2.Q4_K_M.gguf
      - HF_HOME=/app/models/hf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: star_wars_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./static:/app/static
    environment:
      - REACT_APP_STT_URL=http://localhost:5001
      - REACT_APP_TTS_URL=http://localhost:5002
      - REACT_APP_LLM_URL=http://localhost:5003
    depends_on:
      stt:
        condition: service_healthy
      tts:
        condition: service_healthy
      llm:
        condition: service_healthy
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: star_wars_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - stt
      - tts
      - llm
    restart: unless-stopped
    profiles:
      - production

networks:
  default:
    name: star_wars_network
    driver: bridge

volumes:
  models:
    driver: local
  audio_cache:
    driver: local
